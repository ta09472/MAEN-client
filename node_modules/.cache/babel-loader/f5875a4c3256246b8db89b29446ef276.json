{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/react/frontend/MAEN/src/components/uploadTest/UploadContainer.js\";\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport UploadControl from \"./UploadControl\";\nimport UploadWrapper from \"../styled/uploadStyled/UploadWrapper\";\nimport UploaderStyled from \"../styled/uploadStyled/UploaderStyled\";\nimport ButtonWrapper from \"../styled/uploadStyled/ButtonWrapper\";\nimport UploadButtonStyled from \"../styled/uploadStyled/UploadButtonStyled\";\nimport PostFormStyled from \"../styled/uploadStyled/PostFormStyled\";\nimport InputWrapper from \"../styled/uploadStyled/InputWrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadTest = () => {\n  const initialValues = {\n    caption: \"\",\n    description: \"\",\n    video: \"\"\n  };\n  const validationSchema = Yup.object({\n    caption: Yup.string().required(\"required\"),\n    description: Yup.string().required(\"required\")\n  });\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    validateOnMount: true,\n    children: (formik, ㄴㄷ) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(UploadWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(PostFormStyled, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload Your Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UploaderStyled, {\n            children: /*#__PURE__*/_jsxDEV(UploadControl, {\n              control: \"video\",\n              name: \"video\",\n              formProps: formik\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(UploadControl, {\n            control: \"input\",\n            type: \"text\",\n            label: \"Caption\",\n            name: \"caption\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UploadControl, {\n            control: \"textarea\",\n            label: \"description\",\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        children: /*#__PURE__*/_jsxDEV(UploadButtonStyled, {\n          type: \"submit\",\n          disabled: !formik.isValid || formik.isSubmmiting,\n          children: \"upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UploadTest;\nexport default UploadTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadTest\");","map":{"version":3,"sources":["/Users/beomsukim/react/frontend/MAEN/src/components/uploadTest/UploadContainer.js"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","UploadControl","UploadWrapper","UploaderStyled","ButtonWrapper","UploadButtonStyled","PostFormStyled","InputWrapper","UploadTest","initialValues","caption","description","video","validationSchema","object","string","required","onSubmit","values","console","log","formik","ㄴㄷ","isValid","isSubmmiting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,YAAP,MAAyB,qCAAzB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,aAAa,GAAG;AACpBC,IAAAA,OAAO,EAAE,EADW;AAEpBC,IAAAA,WAAW,EAAE,EAFO;AAGpBC,IAAAA,KAAK,EAAE;AAHa,GAAtB;AAMA,QAAMC,gBAAgB,GAAGb,GAAG,CAACc,MAAJ,CAAW;AAClCJ,IAAAA,OAAO,EAAEV,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CADyB;AAElCL,IAAAA,WAAW,EAAEX,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,UAAtB;AAFqB,GAAX,CAAzB;;AAKA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAET,aADjB;AAEE,IAAA,gBAAgB,EAAEI,gBAFpB;AAGE,IAAA,QAAQ,EAAEI,QAHZ;AAIE,IAAA,eAAe,MAJjB;AAAA,cAMG,CAACI,MAAD,EAASC,EAAT,kBACC,QAAC,IAAD;AAAA,8BACE,QAAC,aAAD;AAAA,gCACE,QAAC,cAAD;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,cAAD;AAAA,mCACE,QAAC,aAAD;AACE,cAAA,OAAO,EAAC,OADV;AAEE,cAAA,IAAI,EAAC,OAFP;AAGE,cAAA,SAAS,EAAED;AAHb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,YAAD;AAAA,kCACE,QAAC,aAAD;AACE,YAAA,OAAO,EAAC,OADV;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAC,SAHR;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,aAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,KAAK,EAAC,aAFR;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA0BE,QAAC,aAAD;AAAA,+BACE,QAAC,kBAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,QAAQ,EAAE,CAACA,MAAM,CAACE,OAAR,IAAmBF,MAAM,CAACG,YAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CA9DD;;KAAMhB,U;AAgEN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport UploadControl from \"./UploadControl\";\nimport UploadWrapper from \"../styled/uploadStyled/UploadWrapper\";\nimport UploaderStyled from \"../styled/uploadStyled/UploaderStyled\";\nimport ButtonWrapper from \"../styled/uploadStyled/ButtonWrapper\";\nimport UploadButtonStyled from \"../styled/uploadStyled/UploadButtonStyled\";\nimport PostFormStyled from \"../styled/uploadStyled/PostFormStyled\";\nimport InputWrapper from \"../styled/uploadStyled/InputWrapper\";\n\nconst UploadTest = () => {\n  const initialValues = {\n    caption: \"\",\n    description: \"\",\n    video: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    caption: Yup.string().required(\"required\"),\n    description: Yup.string().required(\"required\"),\n  });\n\n  const onSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n      validateOnMount\n    >\n      {(formik, ㄴㄷ) => (\n        <Form>\n          <UploadWrapper>\n            <PostFormStyled>\n              <h3>Upload Your Day</h3>\n              <UploaderStyled>\n                <UploadControl\n                  control=\"video\"\n                  name=\"video\"\n                  formProps={formik}\n                />\n              </UploaderStyled>\n            </PostFormStyled>\n            <InputWrapper>\n              <UploadControl\n                control=\"input\"\n                type=\"text\"\n                label=\"Caption\"\n                name=\"caption\"\n              />\n              <UploadControl\n                control=\"textarea\"\n                label=\"description\"\n                name=\"description\"\n              />\n            </InputWrapper>\n          </UploadWrapper>\n          <ButtonWrapper>\n            <UploadButtonStyled\n              type=\"submit\"\n              disabled={!formik.isValid || formik.isSubmmiting}\n            >\n              upload\n            </UploadButtonStyled>\n          </ButtonWrapper>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UploadTest;\n"]},"metadata":{},"sourceType":"module"}