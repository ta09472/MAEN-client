{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/react/frontend/MAEN/src/components/uploadTest/UploadContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport UploadControl from \"./UploadControl\";\nimport UploadWrapper from \"../styled/uploadStyled/UploadWrapper\";\nimport UploaderStyled from \"../styled/uploadStyled/UploaderStyled\";\nimport ButtonWrapper from \"../styled/uploadStyled/ButtonWrapper\";\nimport UploadButtonStyled from \"../styled/uploadStyled/UploadButtonStyled\";\nimport PostFormStyled from \"../styled/uploadStyled/PostFormStyled\";\nimport InputWrapper from \"../styled/uploadStyled/InputWrapper\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { uploadPost } from \"../../redux/module/upload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadTest = () => {\n  _s();\n\n  const initialValues = useSelector(state => state.upload.form);\n  const dispatch = useDispatch();\n  const validationSchema = Yup.object({\n    tags: Yup.string().required(\"required\"),\n    description: Yup.string().required(\"required\")\n  });\n\n  const onSubmit = values => {\n    dispatch(uploadPost(values));\n    console.log(values.file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    validateOnMount: true,\n    children: formik => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(UploadWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(PostFormStyled, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload Your Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UploaderStyled, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              label: \"file\",\n              onChange: e => formik.setFieldValue(\"file\", e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(UploadControl, {\n            control: \"input\",\n            type: \"text\",\n            label: \"tags\",\n            name: \"tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UploadControl, {\n            control: \"textarea\",\n            label: \"description\",\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        children: /*#__PURE__*/_jsxDEV(UploadButtonStyled, {\n          type: \"submit\",\n          disabled: !formik.isValid || formik.isSubmmiting,\n          children: \"upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadTest, \"wDXqZ9/gZnsO4dyCw/Eers0TU1s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UploadTest;\nexport default UploadTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadTest\");","map":{"version":3,"sources":["/Users/beomsukim/react/frontend/MAEN/src/components/uploadTest/UploadContainer.js"],"names":["React","useEffect","useState","Formik","Form","Field","ErrorMessage","Yup","UploadControl","UploadWrapper","UploaderStyled","ButtonWrapper","UploadButtonStyled","PostFormStyled","InputWrapper","useSelector","useDispatch","uploadPost","UploadTest","initialValues","state","upload","form","dispatch","validationSchema","object","tags","string","required","description","onSubmit","values","console","log","file","formik","e","setFieldValue","target","files","isValid","isSubmmiting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport UploadControl from \"./UploadControl\";\nimport UploadWrapper from \"../styled/uploadStyled/UploadWrapper\";\nimport UploaderStyled from \"../styled/uploadStyled/UploaderStyled\";\nimport ButtonWrapper from \"../styled/uploadStyled/ButtonWrapper\";\nimport UploadButtonStyled from \"../styled/uploadStyled/UploadButtonStyled\";\nimport PostFormStyled from \"../styled/uploadStyled/PostFormStyled\";\nimport InputWrapper from \"../styled/uploadStyled/InputWrapper\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { uploadPost } from \"../../redux/module/upload\";\n\nconst UploadTest = () => {\n  const initialValues = useSelector((state) => state.upload.form);\n  const dispatch = useDispatch();\n\n  const validationSchema = Yup.object({\n    tags: Yup.string().required(\"required\"),\n    description: Yup.string().required(\"required\"),\n  });\n\n  const onSubmit = (values) => {\n    dispatch(uploadPost(values));\n    console.log(values.file);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n      validateOnMount\n    >\n      {(formik) => (\n        <Form>\n          <UploadWrapper>\n            <PostFormStyled>\n              <h3>Upload Your Day</h3>\n              <UploaderStyled>\n                <input\n                  type=\"file\"\n                  label=\"file\"\n                  onChange={(e) =>\n                    formik.setFieldValue(\"file\", e.target.files[0])\n                  }\n                />\n              </UploaderStyled>\n            </PostFormStyled>\n            <InputWrapper>\n              <UploadControl\n                control=\"input\"\n                type=\"text\"\n                label=\"tags\"\n                name=\"tags\"\n              />\n              <UploadControl\n                control=\"textarea\"\n                label=\"description\"\n                name=\"description\"\n              />\n            </InputWrapper>\n          </UploadWrapper>\n          <ButtonWrapper>\n            <UploadButtonStyled\n              type=\"submit\"\n              disabled={!formik.isValid || formik.isSubmmiting}\n            >\n              upload\n            </UploadButtonStyled>\n          </ButtonWrapper>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UploadTest;\n"]},"metadata":{},"sourceType":"module"}